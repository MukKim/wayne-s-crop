X
### Fit the logistic regression with binary outcome
g0 <- glm(Y~X, family=binomial(), data=Data) # if many explantory variables, chain it with +. ex) X+Z+X1
library(asbio)
data(aids)
head(aids)
table(aids)
rm(list=ls())
install.packages("glm2")
library(glm2)
data(crabs)
head(crabs)
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=2, lower.tail=F)
install.packages("glm2")
library(glm2)
data(crabs)
head(crabs)
Y <- (crabs$Satellites>0)*1
Data <- data.frame(Y,crabs$Width)
names(Data) <- c("Y","X")
head(Data); class(Data)
### Fit the logistic regression with binary outcome
g0 <- glm(Y~X, family=binomial(), data=Data) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g0)
### predict the probability
names(g0)
B <- g0$coefficients
x.vec <- Data$X
hY <- exp(B[1] + B[2]*x.vec) / (1+exp(B[1] + B[2]*x.vec)) # logit caculate and send to array
g0$fitted.values[1:10]
hY[1:10]
### Figure 4.2
plot(x.vec,hY,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec,Data$Y,col="gray50")
# EL_50
EL <- -B[1]/B[2]
abline(v=EL,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
### Odds ratio: page 114
exp(B[2]) # log odds effect
x0=26.3
odd0 <- exp(B[1] + B[2]*x0)
x1=27.3
odd1 <- exp(B[1] + B[2]*x1)
odd1/odd0 # odds ratio
exp(B[2])
library(asbio)
install.packages("asbio")
library(asbio)
data(aids)
head(aids)
table(aids)
# Table 4.4
library(vcd)
# Table 4.4
install.packages("vcd")
# Table 4.4
library(vcd)
structable(formula=symptoms~race+AZT, data=aids)
# fit the logistic regression
g0 <- glm(formula=symptoms~race+AZT, family=binomial(),data=aids)
data(crabs)
head(crabs)
Y <- (crabs$satell>0)*1
c1 <- (crabs$color==1)*1
c2 <- (crabs$color==2)*1
c3 <- (crabs$color==3)*1
x <- crabs$width
Data <- data.frame(Y,c1,c2,c3,x)
Data
names(Data) <- c("Y","c1","c2","c3","width")
summary(Data)
g0 <- glm(formula=Y~.,family=binomial(),data=Data)
B <- g0$coefficients
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~, family=binomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~., family=binomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
##########################################################################################
######### S  u b j e c  t : Collect Temperatue and Humidity data and Analyze #############
######### Collection Date : January 14, 2019                                 #############
######### Data  collector : Wayne's Crop                                     #############
##########################################################################################
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
library(nnet)
par("mar")
library(glm2)
par(mar=c(1,1,1,1))
acc = read.csv("tem_hum_com.csv", header = TRUE)
test <- na.omit(test)
# Open data
test = read.csv("data.csv",header = TRUE)
test[,4] <- test[,4] * 0.01
data = test[,3:4]
temperature <- data[,1]
humidity <- data[,2]
temperature_com <- acc[,1]
humidity_com <- acc[,2]
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~., family=binomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~., family=quasibinomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g0)
g0 <- glm(humidity_com~temperature_com, family=quasibinomial(), data=acc) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g0)
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~., family=quasibinomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g0)
g1 <- glm(humidity_com~temperature_com, family=quasibinomial(), data=acc) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g1)
names(g1)
B <- g0$coefficients
B
x.vec <- data$field1
x.vec
B1 <- g1$coefficients
x.vec <- acc$field1
x.vec
x.vec
B
B1
##########################################################################################
######### S  u b j e c  t : Collect Temperatue and Humidity data and Analyze #############
######### Collection Date : January 14, 2019                                 #############
######### Data  collector : Wayne's Crop                                     #############
##########################################################################################
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
library(nnet)
library(glm2)
par("mar")
par(mar=c(1,1,1,1))
# Open data
test = read.csv("data.csv",header = TRUE)
acc = read.csv("tem_hum_com.csv", header = TRUE)
test <- na.omit(test)
test[,4] <- test[,4] * 0.01
data = test[,3:4]
temperature <- data[,1]
humidity <- data[,2]
temperature_com <- acc[,1]
humidity_com <- acc[,2]
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~., family=quasibinomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g0)
g1 <- glm(humidity_com~temperature_com, family=quasibinomial(), data=acc) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g1)
B <- g0$coefficients
x.vec <- data$field1
B1 <- g1$coefficients
x.vec <- acc$field1
B <- g0$coefficients
B
x.vec
B1
x.vec
data
acc
x.vec <- acc$temperature
x.vec
data
x.vec <- data$data[,2]
x.vec
x.vec2 <- acc$temperature
x.vec <- data$data[,1]
x.vec
B
x.vec <- data$field1
x.vec
x.vec1 <- acc$temperature
hY <- exp(B[1] + B[2]*x.vec) / (1+exp(B[1] + B[2]*x.vec))
hY
B
B1
g1 <- glm(humidity_com~., family=quasibinomial(), data=acc) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g1)
B1 <- g1$coefficients
B1
B1 <- g1$coefficients
x.vec1 <- acc$temperature
hY <- exp(B[1] + B[2]*x.vec) / (1+exp(B[1] + B[2]*x.vec))
g0$fitted.values[1:10]
hY[1:10]
hY1 <- exp(B1[1] + B1[2]*x.vec1) / (1+exp(B1[1] + B1[2]*x.vec1))
g1$fitted.values[1:10]
hY1[1:10]
### Figure 4.2
plot(x.vec,hY,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec,Data$Y,col="gray50")
points(x.vec,data$temperature,col="gray50")
points(x.vec,data$humidity,col="gray50")
### Figure 4.2
plot(x.vec,hY,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec,data$humidity,col="gray50")
points(x.vec1,acc$temperature,col="gray50")
plot(x.vec1,hY1,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec1,acc$temperature,col="gray50")
# EL_50
EL <- -B[1]/B[2]
abline(v=EL,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
points(x.vec1,acc$temperature,col="gray50")
plot(x.vec1,hY1,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec1,acc$temperature,col="gray50")
# EL_50
EL <- -B[1]/B[2]
abline(v=EL,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
### Figure 4.2
plot(x.vec,hY,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec,data$humidity,col="gray50")
# EL_50
EL <- -B[1]/B[2]
abline(v=EL,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
plot(x.vec1,hY1,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec1,acc$temperature,col="gray50")
EL1 <- -B1[1]/B1[2]
abline(v=EL1,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
### Odds ratio: page 114
exp(B[2]) # log odds effect
### Odds ratio: page 114
exp(B[2]) # log odds effect
source('C:/Users/PandoraBox/Desktop/2018/2018_2nd/Category/실습/logistic+regression(chap4).R', echo=TRUE)
library(glm2)
data(crabs)
head(crabs)
Y <- (crabs$Satellites>0)*1
Y
crabs
### Odds ratio: page 114
exp(B[2]) # log odds effect
##########################################################################################
######### S  u b j e c  t : Collect Temperatue and Humidity data and Analyze #############
######### Collection Date : January 14, 2019                                 #############
######### Data  collector : Wayne's Crop                                     #############
##########################################################################################
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
library(nnet)
library(glm2)
par("mar")
par(mar=c(1,1,1,1))
# Open data
test = read.csv("data.csv",header = TRUE)
acc = read.csv("tem_hum_com.csv", header = TRUE)
test <- na.omit(test)
test[,4] <- test[,4] * 0.01
data = test[,3:4]
temperature <- data[,1]
humidity <- data[,2]
temperature_com <- acc[,1]
humidity_com <- acc[,2]
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~., family=quasibinomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g0)
g1 <- glm(humidity_com~., family=quasibinomial(), data=acc) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g1)
### predict the probability
B <- g0$coefficients
x.vec <- data$field1
B1 <- g1$coefficients
x.vec1 <- acc$temperature
hY <- exp(B[1] + B[2]*x.vec) / (1+exp(B[1] + B[2]*x.vec))
g0$fitted.values[1:10]
hY[1:10]
hY1 <- exp(B1[1] + B1[2]*x.vec1) / (1+exp(B1[1] + B1[2]*x.vec1))
g1$fitted.values[1:10]
hY1[1:10]
### Figure 4.2
plot(x.vec,hY,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec,data$humidity,col="gray50")
EL <- -B[1]/B[2]
abline(v=EL,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
plot(x.vec1,hY1,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec1,acc$temperature,col="gray50")
EL1 <- -B1[1]/B1[2]
abline(v=EL1,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
### Odds ratio: page 114
exp(B[2]) # log odds effect
### Odds ratio: page 114
exp(B1[2]) # log odds effect
### LR test
ratio <- g0$null.deviance-g0$deviance
p.value <- 1-pchisq(ratio,df=1)
p.value
# correlation between "width" and "weight"
cor(data$field1,data$field2)
### LR test
ratio1 <- g1$null.deviance-g1$deviance
p.value1 <- 1-pchisq(ratio,df=1)
# correlation
cor(acc$temperature,acc$humidity)
p.value1
ratio1
lrt=g0$deviance-g1$deviance
df=g0$df.residual-g1$df.residual
1-pchisq(lrt,df=df)
fit0 <- multinom(humidity~temperature,data=acc) # model 1 (our interest)
fit1 <- multinom(humidity~1,data=acc) # model 0 (uner H_0)
fit0 <- multinom(humidity~temperature,data=data) # model 1 (our interest)
fit1 <- multinom(humidity~1,data=acc) # model 0 (uner H_0)
fit1 <- multinom(humidity~1,data=data) # model 0 (uner H_0)
fit0 <- multinom(humidity_com~temperature_com,data=acc) # model 1 (our interest)
fit1 <- multinom(humidity_com~1,data=acc) # model 0 (uner H_0)
fit0 <- multinom(humidity~temperature,data=data) # model 1 (our interest)
fit1 <- multinom(humidity~1,data=data) # model 0 (uner H_0)
fit2 <- multinom(humidity_com~temperature_com,data=acc) # model 1 (our interest)
fit3 <- multinom(humidity_com~1,data=acc) # model 0 (uner H_0)
rm(list=ls())
library(nnet)
### construct the alligator data
x <- c(1.24,1.45,1.63,1.78,1.98,2.36,2.79,3.68,
1.30,1.45,1.65,1.78,2.03,2.39,2.84,3.71,
1.30,1.47,1.65,1.78,2.03,2.41,3.25,3.89,
1.32,1.47,1.65,1.80,2.16,2.44,3.28,
1.32,1.50,1.65,1.80,2.26,2.46,3.33,
1.40,1.52,1.68,1.85,2.31,2.56,3.56,
1.42,1.55,1.70,1.88,2.31,2.67,3.58,
1.42,1.60,1.73,1.93,2.36,2.72,3.66)
y <- c("I","I","I","I","I","F","F","O",
"I","O","O","I","F","F","F","F",
"I","I","I","O","F","F","O","F",
"F","F","F","I","F","F","O",
"F","I","F","F","F","F","F",
"F","I","F","F","F","O","F",
"I","I","I","I","F","F","F",
"F","I","O","I","F","I","F")
install.packages("nnet")
install.packages("nnet")
library(nnet)
### construct the alligator data
x <- c(1.24,1.45,1.63,1.78,1.98,2.36,2.79,3.68,
1.30,1.45,1.65,1.78,2.03,2.39,2.84,3.71,
1.30,1.47,1.65,1.78,2.03,2.41,3.25,3.89,
1.32,1.47,1.65,1.80,2.16,2.44,3.28,
1.32,1.50,1.65,1.80,2.26,2.46,3.33,
1.40,1.52,1.68,1.85,2.31,2.56,3.56,
1.42,1.55,1.70,1.88,2.31,2.67,3.58,
1.42,1.60,1.73,1.93,2.36,2.72,3.66)
y <- c("I","I","I","I","I","F","F","O",
"I","O","O","I","F","F","F","F",
"I","I","I","O","F","F","O","F",
"F","F","F","I","F","F","O",
"F","I","F","F","F","F","F",
"F","I","F","F","F","O","F",
"I","I","I","I","F","F","F",
"F","I","O","I","F","I","F")
Data <- data.frame(x,y)
names(Data) <- c("Size","Food")
Data$Food
Data$Food <- relevel(Data$Food, ref=3)
### fit the multinomial logit model
fit1 <- multinom(Food~Size,data=Data) # model 1 (our interest)
fit0 <- multinom(Food~1,data=Data) # model 0 (uner H_0)
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=2, lower.tail=F)
p.value
fit0$deviance
fit1$deviance
### fit the multinomial logit model
fit1 <- multinom(Food~Size,data=Data) # model 1 (our interest)
fit0 <- multinom(Food~1,data=Data) # model 0 (uner H_0)
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=2, lower.tail=F)
### Figure 6.1: predicted probability
pred <- fit1$fitted.values # fitted probabilty for each category
plot(x,pred[,1],col="red",ylim=c(0,1),xlim=range(x),xlab="Size of alligator",ylab="Predicted probability")
points(x,pred[,2],col="blue")
points(x,pred[,3],col="black")
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=1, lower.tail=F)
# correlation
cor(acc$temperature,acc$humidity)
# fit the multinomial logit model
fit0 <- multinom(humidity~temperature,data=data) # model 1 (our interest)
fit1 <- multinom(humidity~1,data=data) # model 0 (uner H_0)
fit2 <- multinom(humidity_com~temperature_com,data=acc) # model 1 (our interest)
fit3 <- multinom(humidity_com~1,data=acc) # model 0 (uner H_0)
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=1, lower.tail=F)
### LR test
ratio <- g0$null.deviance-g0$deviance
p.value <- 1-pchisq(ratio,df=1)
##########################################################################################
######### S  u b j e c  t : Collect Temperatue and Humidity data and Analyze #############
######### Collection Date : January 14, 2019                                 #############
######### Data  collector : Wayne's Crop                                     #############
##########################################################################################
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
library(nnet)
library(glm2)
par("mar")
par(mar=c(1,1,1,1))
# Open data
test = read.csv("data.csv",header = TRUE)
acc = read.csv("tem_hum_com.csv", header = TRUE)
test <- na.omit(test)
test[,4] <- test[,4] * 0.01
data = test[,3:4]
temperature <- data[,1]
humidity <- data[,2]
temperature_com <- acc[,1]
humidity_com <- acc[,2]
### Fit the logistic regression with binary outcome
g0 <- glm(humidity~., family=quasibinomial(), data=data) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g0)
g1 <- glm(humidity_com~., family=quasibinomial(), data=acc) # if many explantory variables, chain it with +. ex) X+Z+X1
summary(g1)
### predict the probability
B <- g0$coefficients
x.vec <- data$field1
B1 <- g1$coefficients
x.vec1 <- acc$temperature
hY <- exp(B[1] + B[2]*x.vec) / (1+exp(B[1] + B[2]*x.vec))
g0$fitted.values[1:10]
hY[1:10]
hY1 <- exp(B1[1] + B1[2]*x.vec1) / (1+exp(B1[1] + B1[2]*x.vec1))
g1$fitted.values[1:10]
hY1[1:10]
### Figure 4.2
plot(x.vec,hY,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec,data$humidity,col="gray50")
EL <- -B[1]/B[2]
abline(v=EL,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
plot(x.vec1,hY1,xlab="Width",ylab="Predicted probability",ylim=c(0,1),cex=.5,col="red")
points(x.vec1,acc$temperature,col="gray50")
EL1 <- -B1[1]/B1[2]
abline(v=EL1,col="gray50",lty=2)
abline(h=0.5, col="gray50", lty=2)
### Odds ratio: page 114
exp(B[2]) # log odds effect
### LR test
ratio <- g0$null.deviance-g0$deviance
p.value <- 1-pchisq(ratio,df=1)
# correlation
cor(data$field1,data$field2)
### LR test
ratio1 <- g1$null.deviance-g1$deviance
p.value1 <- 1-pchisq(ratio,df=1)
# correlation
cor(acc$temperature,acc$humidity)
# fit the multinomial logit model
fit0 <- multinom(humidity~temperature,data=data) # model 1 (our interest)
fit2 <- multinom(humidity_com~temperature_com,data=acc) # model 1 (our interest)
fit1 <- multinom(humidity~1,data=data) # model 0 (uner H_0)
fit3 <- multinom(humidity_com~1,data=acc) # model 0 (uner H_0)
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=1, lower.tail=F)
points(temperature_com,pred[,2],col="blue")
plot(temperature_com,pred[,1],col="red",ylim=c(0,1),xlim=range(temperature_com),xlab="Size of alligator",ylab="Predicted probability")
pred <- fit1$fitted.values # fitted probabilty for each category
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=1, lower.tail=F)
ratio.likelihood <- fit0$deviance - fit1$deviance
p.value <- pchisq(ratio.likelihood, df=1, lower.tail=F)
pred <- fit1$fitted.values # fitted probabilty for each category
plot(temperature_com,pred[,1],col="red",ylim=c(0,1),xlim=range(temperature_com),xlab="Size of alligator",ylab="Predicted probability")
points(temperature_com,pred[,2],col="blue")
points(temperature_com,pred[,3],col="black")
plot(temperature_com,pred[,1],col="red",ylim=c(0,1),xlim=range(temperature_com),xlab="Size of alligator",ylab="Predicted probability")
pred <- fit1$fitted.values # fitted probabilty for each category
pred
plot(temperature,pred[,1],col="red",ylim=c(0,1),xlim=range(temperature),xlab="Size of alligator",ylab="Predicted probability")
points(temperature_com,pred[,2],col="blue")
points(temperature,pred[,2],col="blue")
points(temperature,pred[,3],col="black")
pred
View(pred)
plot(temperature,pred[,:],col="red",ylim=c(0,1),xlim=range(temperature),xlab="Size of alligator",ylab="Predicted probability")
plot(temperature,pred[,],col="red",ylim=c(0,1),xlim=range(temperature),xlab="Size of alligator",ylab="Predicted probability")
1
pred1 <- fit3$fitted.values # fitted probabilty for each category
View(pred1)
pred1 <- fit3$fitted.values # fitted probabilty for each category
plot(temperature_com,pred1[,1],col="red",ylim=c(0,1),xlim=range(temperature_com),xlab="Size of alligator",ylab="Predicted probability")
points(temperature,pred1[,2],col="blue")
points(temperature_com,pred1[,2],col="blue")
points(temperature_com,pred1[,3],col="black")
plot(humidity,pred[,1],col="red",ylim=c(0,1),xlim=range(humidity),xlab="Size of alligator",ylab="Predicted probability")
points(humidity,pred[,2],col="blue")
points(humidity,pred[,3],col="black")
plot(humidity_com,pred1[,1],col="red",ylim=c(0,1),xlim=range(humidity_com),xlab="Size of alligator",ylab="Predicted probability")
points(humidity_com,pred1[,2],col="blue")
points(humidity_com,pred1[,3],col="black")
plot(humidity_com,pred1[,1],col="red",ylim=c(0,1),xlim=range(humidity_com),xlab="Size of alligator",ylab="Predicted probability")
points(humidity_com,pred1[,2],col="blue")
points(humidity_com,pred1[,3],col="black")
plot(x.vec,prob.mat[,1],col="red",ylim=c(0,1),xlim=range(x.vec),type="l",
xlab="Size of alligator",ylab="Predicted probability")
lines(x.vec,prob.mat[,2],col="blue")
lines(x.vec,prob.mat[,3],col="black")
ratio.likelihood
