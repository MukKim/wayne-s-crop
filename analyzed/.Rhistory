setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,2:4]
test1
test1 = test[,3:4]
test1
library(ggplot2)
g <- ggplot(data=test1, aes(x = test1[,1], y = test[,2]))
g
g+geom_point()
ggplot(1, aes(x=team))+geom_bar((fill="dark blue"))
mean.df <- as.data.frame(tapply(df$kda, df$team, mean))
bar <- ggplot(df2, aes(x=test1[,1], y=test1[,2], fill=variable))
bar <- ggplot(1, aes(x=test1[,1], y=test1[,2], fill=variable))
bar <- ggplot(data=test1, aes(x=test1[,1], y=test1[,2], fill=variable))+geom_line()
bar
bar <- ggplot(test1, aes(x=test1[,1], y=test1[,2], fill=variable))+geom_line()
bar
bar <- ggplot(test1, aes(x=test1[,1], y=test1[,2]))+geom_line()
bar
bar <- ggplot(test1, aes(x=test1[,1], y=test1[,2]))+geom_line()+xlim(20,30)
bar
bar <- ggplot(test1, aes(x=test1[,1], y=test1[,2]))+geom_line()+xlim(22,27)
bar
names(test1)[1] <- temperature
names(test1)[1] <- "temperature"
test1
bar <- ggplot(test1, aes(x=test1[,"temperature"], y=test1[,"humidity"]))+geom_line()+xlim(22,27)
bar
temperature <- test1[,1]
humidity <- test1[,2]
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot with temperature and humidity data.
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(22,27)
bar
install.packages("UsingR")
library(UsingR)
data(test1); str(test1)
par(mfrow=c(1,1))
hist(test1$temperature, col="blue", breaks=100)
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
par(mfrow=(1,1))
par(mfrow=c(1,2))
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
par(mfrow=c(1,1))
cor.test(temperature, humidity)
xtabs(~temperature+humidity, data=test1)
out=lm(temperature~parent, data=test1)
out=lm(temperature~humidity, data=test1)
summary(out)
plot(temperature~humidity, data = test1)
abline(out,col="red")
plot(temperature~humidity, data = test1) + ylim(23,27)
abline(out,col="red")
plot(temperature~humidity, data = test1)
abline(out,col="red")
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
fit <- lm(temperature~humidity, data = test1)
summary(fit)
cor.test(temperature, humidity)
plot(temperature~humidity, data=test1)
abline(it,col="blue")
abline(fit,col="blue")
fit <- lm(temperature~humidity, data = test1)
summary(fit) # linear regression
cor.test(temperature, humidity) # correlation
plot(temperature~humidity, data=test1)
abline(fit,col="blue")
fit2 <- lm(temperature~humidity+l(height^2), data=test1)
fit2 <- lm(temperature~humidity+(height^2), data=test1)
fit2 <- lm(temperature~humidity+(humidity^2), data=test1)
summary(fit2)
fit2 <- lm(temperature~humidity+l(humidity^2), data=test1)
fit2 <- lm(temperature~humidity+I(humidity^2), data=test1)
summary(fit2)
plot(temperature~humidity, data=test1)
lines(temperature, fitted(fit2), col="red")
plot(temperature~humidity, data=test1)
par("mar")
par(mar=c(1,1,1,1))
plot(temperature~humidity, data=test1)
lines(temperature, fitted(fit2), col="red")
plot(temperature~humidity, data=test1)
abline(fit, col="blue")
plot(temperature~humidity, data=test1)
lines(temperature, fitted(fit2), col="red")
lines(fitted(fit2), col="red")
lines(temperature(fit2), col="red")
rm(list=ls())
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
# Made Graph with tem and hum data
## Source : http://www.dodomira.com/2016/03/18/ggplot2-%EA%B8%B0%EC%B4%88/
library(ggplot2)
tem <- test1[,1]
hum <- test1[,2]
g <- ggplot(data=test1, aes(x = tem, y = hum))
g+geom_point() # made Scatterplot
## Source : http://www.dodomira.com/2016/03/24/r%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%BA%BD%EC%9D%80%EC%84%A0%ED%98%95-%EC%9B%90%ED%98%95-%EC%98%81%EC%97%AD%ED%98%95-%EB%B6%84%EC%82%B0%ED%98%95-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC/
bar <- ggplot(test1, aes(x=tem, y=hum))+geom_line()+xlim(23,27)
bar # made deflection graph
# Correlation, Regression with tem and hum data
# Source : http://rstudio-pubs-static.s3.amazonaws.com/189354_277dfb3a83a34a2abaae855b90fcf269.html
library(UsingR)
data(test1)
str(test1)
par(mfrow=c(1,2))
hist(tem, col="blue", breaks=100)
hist(hum, col="blue", breaks=100)
par(mfrow=c(1,1)) # histogram
cor.test(tem, hum) # Pearson's product-moment correlation
xtabs(~tem+hum, data=test1) # table
out=lm(tem~hum, data=test1)
summary(out) # regression
plot(tem~hum, data = test1)
abline(out,col="red") # graph with scatterplot and regression line
ggplot(data = test1, aes(x=tem, y=hum))+geom_count()+geom_smooth(method="lm")
# made graph
fit <- lm(tem~hum, data = test1)
summary(fit) # linear regression
cor.test(tem, hum) # correlation
plot(tem~hum, data=test1)
abline(fit, col="blue")
fit2 <- lm(tem~hum+I(hum^2), data=test1)
summary(fit2) # polynomial regression
par("mar")
par(mar=c(1,1,1,1))
plot(tem~hum, data=test1)
lines(tem(fit2), col="red")
lines(tem, fitted(fit2), col="red")
rm(list=ls())
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
# Made Graph with tem and hum data
## Source : http://www.dodomira.com/2016/03/18/ggplot2-%EA%B8%B0%EC%B4%88/
library(ggplot2)
tem <- test1[,1]
hum <- test1[,2]
g <- ggplot(data=test1, aes(x = tem, y = hum))
g+geom_point() # made Scatterplot
## Source : http://www.dodomira.com/2016/03/24/r%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%BA%BD%EC%9D%80%EC%84%A0%ED%98%95-%EC%9B%90%ED%98%95-%EC%98%81%EC%97%AD%ED%98%95-%EB%B6%84%EC%82%B0%ED%98%95-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC/
bar <- ggplot(test1, aes(x=tem, y=hum))+geom_line()+xlim(23,27)
bar # made deflection graph
# Correlation, Regression with tem and hum data
# Source : http://rstudio-pubs-static.s3.amazonaws.com/189354_277dfb3a83a34a2abaae855b90fcf269.html
library(UsingR)
data(test1)
str(test1)
par(mfrow=c(1,2))
hist(tem, col="blue", breaks=100)
hist(hum, col="blue", breaks=100)
par(mfrow=c(1,1)) # histogram
cor.test(tem, hum) # Pearson's product-moment correlation
xtabs(~tem+hum, data=test1) # table
out=lm(tem~hum, data=test1)
summary(out) # regression
plot(tem~hum, data = test1)
abline(out,col="red") # graph with scatterplot and regression line
ggplot(data = test1, aes(x=tem, y=hum))+geom_count()+geom_smooth(method="lm")
# made graph
fit <- lm(tem~hum, data = test1)
summary(fit) # linear regression
cor.test(tem, hum) # correlation
plot(tem~hum, data=test1)
abline(fit, col="blue")
fit2 <- lm(tem~hum+I(hum^2), data=test1)
summary(fit2) # polynomial regression
par("mar")
par(mar=c(1,1,1,1))
plot(tem~hum, data=test1)
lines(tem, fitted(fit2), col="red")
plot(tem~hum, data=test1)
abline(fit, col="blue") # graph
xlab="Temperature(Celsius)", ylab="Humidity(mm)"
scatterplot(tem~hum, data=test1, pch=19,
spread=FALSE, smoother.args=list(lty=2),
main="Test data",
xlab="Temperature(Celsius)", ylab="Humidity(mm)")
library(car)
install.packages(car)
install.packages("car")
library(car)
library(car)
fit3 <- lm(tem~hum + I(hum^2) + I(height^3), data=test1)
fit3 <- lm(tem~hum + I(hum^2) + I(hum^3), data=test1)
scatterplot(tem~hum, data=test1)
scatterplot(tem~hum, data=test1, pch=19,
spread=FALSE, smoother.args=list(lty=2),
main="Test data",
xlab="Temperature(Celsius)", ylab="Humidity(mm)")
scatterplot(tem~hum, data=test1, pch=19,
spread=FALSE, smoother.args=list(lty=2),
main="Test data",
xlab="Temperature(Celsius)", ylab="Humidity(mm)")
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
tem <- test1[,1]
hum <- test1[,2]
g <- ggplot(data=test1, aes(x = tem, y = hum))
View(test1)
g+geom_point() # made Scatterplot
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(23,27)
bar # made deflection graph
data(test1)
str(test1)
par(mfrow=c(1,2))
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test1 = test[,3:4]
test1
test
View(test1)
temperature <- test1[,1]
humidity <- test1[,2]
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(23,27)
bar # made deflection graph
data(test1)
str(test1)
par(mfrow=c(1,2))
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
par(mfrow=c(1,1)) # histogram
cor.test(temperature, humidity) # Pearson's product-moment correlation
xtabs(~temperature+humidity, data=test1) # table
out=lm(temperature~humidity, data=test1)
summary(out) # regression
plot(temperature~humidity, data = test1)
abline(out,col="red") # graph with scatterplot and regression line
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
plot(temperature~humidity, data = test1)
abline(out,col="red") # graph with scatterplot and regression line
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
fit <- lm(temperature~humidity, data = test1)
summary(fit) # linear regression
cor.test(temperature, humidity) # correlation
plot(temperature~humidity, data=test1)
abline(fit, col="blue") # graph
fit2 <- lm(temperature~humidity+I(humidity^2), data=test1)
summary(fit2) # polynomial regression(2)
plot(temperature~humidity, data=test1)
lines(temperature, fitted(fit2), col="red") # graph
fit3 <- lm(temperature~humidity + I(humidity^2) + I(humidity^3), data=test1)
scatterplot(temperature~humidity, data=test1)
scatterplot(temperature~humidity, data=test1, pch=19,
spread=FALSE, smoother.args=list(lty=2),
main="Test data",
xlab="Temperature(Celsius)", ylab="Humidity(mm)")
out=lm(temperature~humidity, data=test1)
summary(out) # regression
out=lm(temperature~humidity, data=test1)
summary(out) # regression
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
View(test1)
temperature <- test1[,1]
humidity <- test1[,2]
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(23,27)
bar # made deflection graph
str(test1)
par(mfrow=c(1,2))
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
par(mfrow=c(1,1)) # histogram
cor.test(temperature, humidity) # Pearson's product-moment correlation
xtabs(~temperature+humidity, data=test1) # table
out=lm(temperature~humidity, data=test1)
summary(out) # regression
plot(temperature~humidity, data = test1)
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
# Made Graph with temperature and humidity data
## Source : http://www.dodomira.com/2016/03/18/ggplot2-%EA%B8%B0%EC%B4%88/
temperature <- test1[,1]
humidity <- test1[,2]
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot
## Source : http://www.dodomira.com/2016/03/24/r%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%BA%BD%EC%9D%80%EC%84%A0%ED%98%95-%EC%9B%90%ED%98%95-%EC%98%81%EC%97%AD%ED%98%95-%EB%B6%84%EC%82%B0%ED%98%95-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC/
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(23,27)
bar # made deflection graph
# Correlation, Regression with temperature and humidity data
# Source : http://rstudio-pubs-static.s3.amazonaws.com/189354_277dfb3a83a34a2abaae855b90fcf269.html
str(test1)
par(mfrow=c(1,2))
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
par(mfrow=c(1,1)) # histogram
cor.test(temperature, humidity) # Pearson's product-moment correlation
xtabs(~temperature+humidity, data=test1) # table
#plot(temperature~humidity, data = test1)
#abline(out,col="red") # graph with scatterplot and regression line
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
# made graph
summary(fit3) # polynomial regression(3)
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
# Made Graph with temperature and humidity data
## Source : http://www.dodomira.com/2016/03/18/ggplot2-%EA%B8%B0%EC%B4%88/
temperature <- test1[,1]
humidity <- test1[,2]
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot
## Source : http://www.dodomira.com/2016/03/24/r%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%BA%BD%EC%9D%80%EC%84%A0%ED%98%95-%EC%9B%90%ED%98%95-%EC%98%81%EC%97%AD%ED%98%95-%EB%B6%84%EC%82%B0%ED%98%95-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC/
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(23,27)
bar # made deflection graph
# Correlation, Regression with temperature and humidity data
# Source : http://rstudio-pubs-static.s3.amazonaws.com/189354_277dfb3a83a34a2abaae855b90fcf269.html
str(test1)
par(mfrow=c(1,2))
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
par(mfrow=c(1,1)) # histogram
cor.test(temperature, humidity) # Pearson's product-moment correlation
xtabs(~temperature+humidity, data=test1) # table
#plot(temperature~humidity, data = test1)
#abline(out,col="red") # graph with scatterplot and regression line
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
# made graph
fit <- lm(temperature~humidity, data = test1)
summary(fit) # linear regression
plot(temperature~humidity, data=test1)
abline(fit, col="blue") # graph
fit2 <- lm(temperature~humidity+I(humidity^2), data=test1)
summary(fit2) # polynomial regression(2)
plot(temperature~humidity, data=test1)
lines(temperature, fitted(fit2), col="red") # graph
fit3 <- lm(temperature~humidity + I(humidity^2) + I(humidity^3), data=test1)
summary(fit3) # polynomial regression(3)
scatterplot(temperature~humidity, data=test1)
scatterplot(temperature~humidity, data=test1, pch=19,
spread=FALSE, smoother.args=list(lty=2),
main="Test data",
xlab="Temperature(Celsius)", ylab="Humidity(mm)")
summary(fit3) # polynomial regression(3)
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
# Made Graph with temperature and humidity data
## Source : http://www.dodomira.com/2016/03/18/ggplot2-%EA%B8%B0%EC%B4%88/
temperature <- test1[,1]
humidity <- test1[,2]
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot
## Source : http://www.dodomira.com/2016/03/24/r%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%BA%BD%EC%9D%80%EC%84%A0%ED%98%95-%EC%9B%90%ED%98%95-%EC%98%81%EC%97%AD%ED%98%95-%EB%B6%84%EC%82%B0%ED%98%95-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC/
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(23,27)
bar # made deflection graph
# Correlation, Regression with temperature and humidity data
# Source : http://rstudio-pubs-static.s3.amazonaws.com/189354_277dfb3a83a34a2abaae855b90fcf269.html
str(test1)
par(mfrow=c(1,2))
hist(temperature, col="blue", breaks=100)
hist(humidity, col="blue", breaks=100)
par(mfrow=c(1,1)) # histogram
cor.test(temperature, humidity) # Pearson's product-moment correlation
xtabs(~temperature+humidity, data=test1) # table
#plot(temperature~humidity, data = test1)
#abline(out,col="red") # graph with scatterplot and regression line
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
# made graph
fit <- lm(temperature~humidity, data = test1)
summary(fit) # linear regression
plot(temperature~humidity, data=test1)
abline(fit, col="blue") # graph
fit2 <- lm(temperature~humidity+I(humidity^2), data=test1)
summary(fit2) # polynomial regression(2)
plot(temperature~humidity, data=test1)
lines(temperature, fitted(fit2), col="red") # graph
fit3 <- lm(temperature~humidity + I(humidity^2) + I(humidity^3), data=test1)
summary(fit3) # polynomial regression(3)
scatterplot(temperature~humidity, data=test1)
scatterplot(temperature~humidity, data=test1, pch=19,
spread=FALSE, smoother.args=list(lty=2),
main="Test data",
xlab="Temperature(Celsius)", ylab="Humidity(mm)")
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("test.csv",header = TRUE)
test
test1 = test[,3:4]
test1
temperature <- test1[,1]
humidity <- test1[,2]
g <- ggplot(data=test1, aes(x = temperature, y = humidity))
g+geom_point() # made Scatterplot
bar <- ggplot(test1, aes(x=temperature, y=humidity))+geom_line()+xlim(23,27)
bar # made deflection graph
str(test1)
par(mfrow=c(1,2))
par(mfrow=c(1,1)) # histogram
cor.test(temperature, humidity) # Pearson's product-moment correlation
xtabs(~temperature+humidity, data=test1) # table
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
fit <- lm(temperature~humidity, data = test1)
rm(list=ls())
# library
library(ggplot2)
library(UsingR)
library(car)
par("mar")
par(mar=c(1,1,1,1))
# Open data
setwd("C:\\Users\\PandoraBox\\Desktop\\2018\\2018_winter\\wayne-s-crop\\analyzed")
getwd
test = read.csv("feed.csv",header = TRUE)
test
test1 = test[,3:4]
test1
test1 = test[,3:4]
test1
test = read.csv("feed.csv",header = TRUE)
test
test1 = test[,3:4]
test1
View(test1)
ggplot(data = test1, aes(x=temperature, y=humidity))+geom_count()+geom_smooth(method="lm")
